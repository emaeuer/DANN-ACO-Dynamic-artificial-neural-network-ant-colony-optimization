ERROR | 2021-02-10 11:48:38 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 11:48:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@53017f01ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@3e2d74c7NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@456ae4faACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@15f22149ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@4dd3ad81ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@188d73b0ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ad2096fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@eae9915NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@5e4192e4ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2d226a6fACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@372197d5
INFO  | 2021-02-10 11:48:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 11:48:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@53017f01ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@3e2d74c7NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@564c9ef0ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@15f22149ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@4dd3ad81ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@188d73b0ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ad2096fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@eae9915NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2c94d3f5ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2d226a6fACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@372197d5
INFO  | 2021-02-10 11:48:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 11:49:23 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 11:49:23 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@38417a25ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5a2fc74NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@4527070bACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@383a18c8ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@b19cdb8ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@19cad1f3ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@6428829eACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@cbc2a8bACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@490d52a9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@6874732NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@269b090e
INFO  | 2021-02-10 11:49:23 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 11:49:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@38417a25ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5a2fc74NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@70195495ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@383a18c8ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@b19cdb8ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@19cad1f3ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@6428829eACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@cbc2a8bACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@490d52a9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@6874732NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6af516c5
INFO  | 2021-02-10 11:49:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 11:49:31 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:31 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:31 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:31 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:31 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 220.49999999999176
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 27.50000000000012
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 8.699999999999985
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 6 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:49:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 11:49:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:49:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 32.40000000000019
INFO  | 2021-02-10 11:49:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 70.60000000000026
INFO  | 2021-02-10 11:49:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 71.10000000000024
INFO  | 2021-02-10 11:49:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 11:49:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 46 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:49:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 32.40000000000019
INFO  | 2021-02-10 11:49:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:49:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:49:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 43 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 32.40000000000019
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 68 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 11.500000000000027
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 7 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:49:59 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
INFO  | 2021-02-10 11:50:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 32.40000000000019
INFO  | 2021-02-10 11:50:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 129.19999999999695
INFO  | 2021-02-10 11:50:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 7
INFO  | 2021-02-10 11:50:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 45 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 55 updated in colony 5 with a fitness of 32.40000000000019
INFO  | 2021-02-10 11:50:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 79 updated in colony 7 with a fitness of 72.50000000000016
INFO  | 2021-02-10 11:50:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 8
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 4
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 4 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 48.900000000000425
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 64 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:50:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 9
INFO  | 2021-02-10 11:50:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 46 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 15.099999999999962
INFO  | 2021-02-10 11:50:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 68 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:50:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 78 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:09 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 10
INFO  | 2021-02-10 11:50:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 72.80000000000014
INFO  | 2021-02-10 11:50:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 27.50000000000012
INFO  | 2021-02-10 11:50:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 128.99999999999696
INFO  | 2021-02-10 11:50:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:12 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 11
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 43 updated in colony 4 with a fitness of 12.900000000000047
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 21.400000000000034
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 66 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 170.3999999999946
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 4 takes the solution of 7 because it is significantly worse
INFO  | 2021-02-10 11:50:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 12
INFO  | 2021-02-10 11:50:17 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 49 updated in colony 4 with a fitness of 77.69999999999986
INFO  | 2021-02-10 11:50:17 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 7.89999999999998
INFO  | 2021-02-10 11:50:17 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:17 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 77 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:17 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 13
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 44 updated in colony 4 with a fitness of 75.2
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 7.89999999999998
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 61 updated in colony 6 with a fitness of 123.29999999999727
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 75.59999999999998
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 5 takes the solution of 6 because it is significantly worse
INFO  | 2021-02-10 11:50:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 14
INFO  | 2021-02-10 11:50:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 284.39999999999617
INFO  | 2021-02-10 11:50:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 57 updated in colony 5 with a fitness of 148.19999999999587
INFO  | 2021-02-10 11:50:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 69 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:50:26 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 15
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 29.200000000000145
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 120.69999999999742
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 5 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 5 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 11:52:19 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 16
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 44 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 75.2
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 6
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 6 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:53:42 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 17
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 41 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 57 updated in colony 5 with a fitness of 123.99999999999723
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 61 updated in colony 6 with a fitness of 75.49999999999999
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 78 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 7
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 7 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 7 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:55:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 18
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 77.59999999999987
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 7 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 7 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 11:56:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 19
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 45 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 57 updated in colony 5 with a fitness of 170.3999999999946
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 170.3999999999946
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 125.19999999999716
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 7 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:57:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 20
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 47 updated in colony 4 with a fitness of 5000.100000000659
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 59 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 78 updated in colony 7 with a fitness of 72.10000000000018
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 5 takes the solution of 4 because it is significantly worse
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 5 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 5 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 11:59:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 21
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 41 updated in colony 4 with a fitness of 73.30000000000011
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 4
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 18.150000000000123
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 74.70000000000003
INFO  | 2021-02-10 11:59:19 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 22
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 46 updated in colony 4 with a fitness of 9.149999999999993
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 18.00000000000012
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 120.29999999999744
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 4 takes the solution of 7 because it is significantly worse
INFO  | 2021-02-10 11:59:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 23
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 43 updated in colony 4 with a fitness of 70.50000000000027
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 5000.100000000659
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 71.50000000000021
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 6 takes the solution of 5 because it is significantly worse
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=1, neuronID=1]
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=2, neuronID=1] to NeuronID[layerID=3, neuronID=0]
INFO  | 2021-02-10 12:00:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 24
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 54 updated in colony 5 with a fitness of 5000.100000000659
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 74.70000000000003
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 120.29999999999744
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 6 takes the solution of 5 because it is significantly worse
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=1, neuronID=1]
INFO  | 2021-02-10 12:02:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 25
INFO  | 2021-02-10 12:03:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 170.3999999999946
INFO  | 2021-02-10 12:03:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 53 updated in colony 5 with a fitness of 5000.100000000659
INFO  | 2021-02-10 12:03:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 61 updated in colony 6 with a fitness of 68.40000000000039
INFO  | 2021-02-10 12:03:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 6
INFO  | 2021-02-10 12:03:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=1, neuronID=0]
ERROR | 2021-02-10 12:56:14 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 12:56:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@53017f01ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@3e2d74c7NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@456ae4faACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@15f22149ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@4dd3ad81ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@188d73b0ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ad2096fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@eae9915NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@5e4192e4ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2d226a6fACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@372197d5
INFO  | 2021-02-10 12:56:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 12:56:15 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@53017f01ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@3e2d74c7NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@564c9ef0ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@15f22149ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@4dd3ad81ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@188d73b0ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ad2096fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@eae9915NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2c94d3f5ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2d226a6fACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@372197d5
INFO  | 2021-02-10 12:56:15 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 12:57:38 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 12:57:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@2ca6a4d6ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5303c7bdACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@606fbbf6NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@12421007ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@bdb968dACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@46289664ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@5b05255cACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@5945d413ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@e7d4e48ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ce46255ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@7e398950
INFO  | 2021-02-10 12:57:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 12:57:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@694eef4aACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5303c7bdACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@606fbbf6NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@532fd5f3ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@bdb968dACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@46289664ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@5b05255cACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@5945d413ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@e7d4e48ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@ce46255ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@7e398950
INFO  | 2021-02-10 12:57:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 12:58:41 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 12:58:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@7ec21863ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@6a2ad6b2ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@7cb43930ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@11902d6bACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@7f7f2e3aACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@435ce821ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1e7c24c3NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@e17a912ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@81f4814ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@2ca6a4d6ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5303c7bd
INFO  | 2021-02-10 12:58:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 12:58:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2fc6332dACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@6a2ad6b2ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@7cb43930ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@11902d6bACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@7f7f2e3aACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@435ce821ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1e7c24c3NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@2177e498ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@81f4814ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@2ca6a4d6ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5303c7bd
INFO  | 2021-02-10 12:58:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:06:12 | [main] emaeuer.Main (Main.java:26) - Hello
ERROR | 2021-02-10 13:06:44 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:06:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@17e9653aACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@a1b9995NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@3b73ff62ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@707d4931ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@2c6122b1ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@7ae0c199ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@5ecca948ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@44e24761ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@61b381e6ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@1d237840NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@261e0445
INFO  | 2021-02-10 13:06:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:08:08 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:08:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:08:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:08:23 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:08:23 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:08:23 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:08:45 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:08:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:08:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:09:49 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:09:49 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:09:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:10:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 16.150000000000095
INFO  | 2021-02-10 13:10:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:00 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:10:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 29.200000000000145
INFO  | 2021-02-10 13:10:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:10:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:10:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:10:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:10:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:10:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:10:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 16 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:10:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 8.349999999999982
INFO  | 2021-02-10 13:10:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 34 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:10:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
ERROR | 2021-02-10 13:10:55 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:10:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@3171f00dACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@23752535ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@57f837b9ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@61764bd7ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5f392e6cACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@556fe433ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@433c44d8ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@10c7879bNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@69b81a1ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2c7fb33dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@d4438ee
INFO  | 2021-02-10 13:10:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:12:35 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:12:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:12:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:13:29 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:13:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:13:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:13:42 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:13:42 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@3171f00dACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@23752535ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@57f837b9ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@61764bd7ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5f392e6cACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@556fe433ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@433c44d8ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@10c7879bNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@69b81a1ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2c7fb33dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@d4438ee
INFO  | 2021-02-10 13:13:42 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:14:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 71.30000000000022
INFO  | 2021-02-10 13:14:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 27.50000000000012
INFO  | 2021-02-10 13:14:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:14:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 72.30000000000017
INFO  | 2021-02-10 13:14:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 124.4999999999972
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 16 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 3 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 13:14:06 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:14:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 8 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 15 updated in colony 1 with a fitness of 72.70000000000014
INFO  | 2021-02-10 13:14:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 72.50000000000016
INFO  | 2021-02-10 13:14:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:14:07 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 13:14:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:14:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:14:09 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 71.8000000000002
INFO  | 2021-02-10 13:14:09 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
ERROR | 2021-02-10 13:14:34 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:14:34 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:14:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:16:15 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:16:15 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@7f7f2e3aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@435ce821NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@1e7c24c3ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@e17a912ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@81f4814ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@2ca6a4d6NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@5303c7bdACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@606fbbf6ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@12421007ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@bdb968dACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@46289664
INFO  | 2021-02-10 13:16:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:16:31 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:16:31 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@3171f00dACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@23752535ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@57f837b9ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@61764bd7ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5f392e6cACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@556fe433ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@433c44d8ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@10c7879bNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@69b81a1ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2c7fb33dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@d4438ee
INFO  | 2021-02-10 13:16:31 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:19:53 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:19:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:19:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:21:45 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:21:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:21:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:23:39 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:23:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:23:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:23:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:23:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:23:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:23:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:23:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 8 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 19 updated in colony 1 with a fitness of 127.79999999999701
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 3 takes the solution of 1 because it is significantly worse
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 13:24:00 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:24:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 124.79999999999718
INFO  | 2021-02-10 13:24:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 77.49999999999987
INFO  | 2021-02-10 13:24:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 32 updated in colony 3 with a fitness of 126.99999999999706
INFO  | 2021-02-10 13:24:03 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:24:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 75.79999999999997
INFO  | 2021-02-10 13:24:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 19 updated in colony 1 with a fitness of 23.350000000000197
INFO  | 2021-02-10 13:24:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 37 updated in colony 3 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:24:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 13:24:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 72.50000000000016
INFO  | 2021-02-10 13:24:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 19 updated in colony 1 with a fitness of 28.200000000000266
INFO  | 2021-02-10 13:24:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:24:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
INFO  | 2021-02-10 13:24:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 33.05000000000027
INFO  | 2021-02-10 13:24:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 72.20000000000017
INFO  | 2021-02-10 13:24:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 7
INFO  | 2021-02-10 13:24:11 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 6 updated in colony 0 with a fitness of 74.10000000000007
INFO  | 2021-02-10 13:24:11 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:11 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 28 updated in colony 2 with a fitness of 70.90000000000025
INFO  | 2021-02-10 13:24:11 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:24:11 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 8
ERROR | 2021-02-10 13:27:36 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:27:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:27:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:27:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 69.20000000000034
INFO  | 2021-02-10 13:27:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:27:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:27:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:27:47 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:27:51 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 4 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:27:51 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 76.29999999999994
INFO  | 2021-02-10 13:27:51 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 23 updated in colony 2 with a fitness of 12.200000000000037
INFO  | 2021-02-10 13:27:51 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 72.30000000000017
INFO  | 2021-02-10 13:27:51 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
ERROR | 2021-02-10 13:29:29 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:29:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@561af59dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@75bdf3bbACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@38b6a7e2ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@5b9de181ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@5aaa4172ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@409051b7ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@4d1477f0ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@7931163aNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@711869bfACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@334783c2ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5d82c9ad
INFO  | 2021-02-10 13:29:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:29:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:29:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 74.80000000000003
INFO  | 2021-02-10 13:29:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:42 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:29:42 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 4 updated in colony 0 with a fitness of 15.099999999999962
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 170.3999999999946
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 170.3999999999946
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 3 takes the solution of 1 because it is significantly worse
INFO  | 2021-02-10 13:29:49 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:29:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 31.100000000000172
INFO  | 2021-02-10 13:29:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 124.69999999999719
INFO  | 2021-02-10 13:29:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:29:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 31.100000000000172
INFO  | 2021-02-10 13:29:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 16 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:29:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
ERROR | 2021-02-10 13:34:05 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:34:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5e48efadNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@694931b2ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@24b2f40ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@7f241df6ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@6608a038ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@466cc9eaACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@1d86cf48ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@4212aaa3NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@6138cbb9ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@41bb7dedACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a6c161d
INFO  | 2021-02-10 13:34:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:34:21 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:34:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@23c6caa3NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6c1addd0ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1194b6baACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@6fd5796fACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@7a5325e4ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@401d9323ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@7488dcfcACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@30d2dd03ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@53cdb2f8ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@7fe5a729ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@4d38fb15
INFO  | 2021-02-10 13:34:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:34:28 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:34:28 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:34:28 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:34:28 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:34:28 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:34:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:34:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 121.59999999999737
INFO  | 2021-02-10 13:34:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 28 updated in colony 2 with a fitness of 18.699999999999996
INFO  | 2021-02-10 13:34:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 122.7999999999973
INFO  | 2021-02-10 13:34:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:34:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:34:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 171.29999999999455
INFO  | 2021-02-10 13:34:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 18.699999999999996
INFO  | 2021-02-10 13:34:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:34:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:34:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 1 updated in colony 0 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:34:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:34:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 28 updated in colony 2 with a fitness of 39.30000000000029
INFO  | 2021-02-10 13:34:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:34:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 13:34:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:34:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:34:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:34:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:34:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 21.400000000000034
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 222.99999999999162
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 0 takes the solution of 1 because it is significantly worse
INFO  | 2021-02-10 13:34:46 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 7
ERROR | 2021-02-10 13:42:26 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:42:26 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:42:27 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:42:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:42:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:42:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:42:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:42:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 125.29999999999715
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 76.69999999999992
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 1 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 13:42:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
ERROR | 2021-02-10 13:43:30 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:43:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:43:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:43:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:43:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:43 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:43:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:43:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 13:43:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:43:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 124.3999999999972
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 78.19999999999983
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 3 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 13:43:48 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 71.10000000000024
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 384.20000000001886
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 3 takes the solution of 2 because it is significantly worse
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 13:43:58 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 13:44:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 72.70000000000014
INFO  | 2021-02-10 13:44:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 13:44:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 128.099999999997
INFO  | 2021-02-10 13:44:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:44:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
ERROR | 2021-02-10 13:44:20 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:44:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@3171f00dACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@23752535ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@57f837b9ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@61764bd7ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5f392e6cACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@556fe433ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@433c44d8ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@10c7879bNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@69b81a1ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2c7fb33dNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@d4438ee
INFO  | 2021-02-10 13:44:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
ERROR | 2021-02-10 13:44:38 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:44:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:44:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:44:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:44:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:44:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 73.20000000000012
INFO  | 2021-02-10 13:44:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:44:47 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
ERROR | 2021-02-10 13:45:17 | [main] emaeuer.Main (Main.java:26) - Hello
INFO  | 2021-02-10 13:45:17 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@f88e2abACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@6a218d02ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:45:17 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:45:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@49290aedACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@279d9c37ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:45:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@6661bb61ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@13d97fa3ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:45:29 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:45:31 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@7f670958ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@642c01eACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@6a1a8020ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@58b06ce9ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@1f5a936eNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@6cf03dd6ACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@31ad68faNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@7f2719b0ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@212bb2cbACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@697e91ffACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@334ede92
INFO  | 2021-02-10 13:45:31 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@50975110ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2a5b596fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
Generating solutions for iteration 1
Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@5c2d68cbACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@72d49bc6ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
Generating solutions for iteration 1
Ant 40 updated in colony 4 with a fitness of 8.699999999999985
Ant 54 updated in colony 5 with a fitness of 15.099999999999962
Ant 60 updated in colony 6 with a fitness of 8.699999999999985
Ant 70 updated in colony 7 with a fitness of 8.699999999999985
Generating solutions for iteration 2
INFO  | 2021-02-10 13:55:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@50975110ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2a5b596fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
INFO  | 2021-02-10 13:55:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:55:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@73738497ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@398f6651ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
INFO  | 2021-02-10 13:55:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:56:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@50975110ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@2a5b596fACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
INFO  | 2021-02-10 13:56:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:56:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@1c420404ACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@382d6098ACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5c791cbfNN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@73738497ACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@79a1df63NN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@398f6651ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@3e53347fACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@5426fd74ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@230b6a54
INFO  | 2021-02-10 13:56:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:57:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@733c85bbACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5a5d20eaNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@1c2f13f9ACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@1c420404ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@382d6098ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@5c791cbfACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@50975110NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@79a1df63ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2a5b596fACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@3e53347f
INFO  | 2021-02-10 13:57:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:57:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:33) - Created ACO-Handler with following configuration: 
ACO_CONNECTION_SPLIT_PROBABILITY   = net.objecthunter.exp4j.Expression@733c85bbACO_NUMBER_OF_COLONIES             = net.objecthunter.exp4j.Expression@5a5d20eaNN_OUTPUT_LAYER_SIZE               = net.objecthunter.exp4j.Expression@4baad77dACO_PHEROMONE_UPDATE_FUNCTION      = net.objecthunter.exp4j.Expression@1c420404ACO_PROGRESSION_ITERATIONS         = net.objecthunter.exp4j.Expression@b445b6aACO_PHEROMONE_DISSIPATION_FUNCTION = net.objecthunter.exp4j.Expression@382d6098ACO_INITIAL_PHEROMONE_VALUE        = net.objecthunter.exp4j.Expression@5c791cbfACO_STANDARD_DEVIATION_FUNCTION    = net.objecthunter.exp4j.Expression@50975110NN_INPUT_LAYER_SIZE                = net.objecthunter.exp4j.Expression@3a59dd4ACO_PROGRESSION_THRESHOLD          = net.objecthunter.exp4j.Expression@2a5b596fACO_COLONY_SIZE                    = net.objecthunter.exp4j.Expression@3e53347f
INFO  | 2021-02-10 13:57:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 1
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 8.699999999999985
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:79) - ACO-Colony 4 takes the solution of 6 because it is significantly worse
INFO  | 2021-02-10 13:57:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 2
INFO  | 2021-02-10 13:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 44 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 62 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:57:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 39.30000000000029
INFO  | 2021-02-10 13:57:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 3
INFO  | 2021-02-10 13:57:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 76.8999999999999
INFO  | 2021-02-10 13:57:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:57:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 63 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 13:57:56 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 72 updated in colony 7 with a fitness of 59.20000000000057
INFO  | 2021-02-10 13:57:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 4
INFO  | 2021-02-10 13:57:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:57:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:57:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:57:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:57:58 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 5
INFO  | 2021-02-10 13:58:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 47 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 13:58:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 53 updated in colony 5 with a fitness of 78.6999999999998
INFO  | 2021-02-10 13:58:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 72.50000000000016
INFO  | 2021-02-10 13:58:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 29.300000000000146
INFO  | 2021-02-10 13:58:00 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:52) - Generating solutions for iteration 6
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:02:16 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:02:17 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:02:17 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:02:17 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 47 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 69 updated in colony 6 with a fitness of 170.6999999999946
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 79 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 5 takes the solution of 6 because it is significantly worse
INFO  | 2021-02-10 14:02:49 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:02:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 74.10000000000007
INFO  | 2021-02-10 14:02:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 58 updated in colony 5 with a fitness of 121.19999999999739
INFO  | 2021-02-10 14:02:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 74.30000000000005
INFO  | 2021-02-10 14:02:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 75 updated in colony 7 with a fitness of 120.8999999999974
INFO  | 2021-02-10 14:02:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:02:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 48 updated in colony 4 with a fitness of 72.50000000000016
INFO  | 2021-02-10 14:02:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:02:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 69 updated in colony 6 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:02:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 81.69999999999963
INFO  | 2021-02-10 14:02:54 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 4
INFO  | 2021-02-10 14:02:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 49 updated in colony 4 with a fitness of 71.20000000000023
INFO  | 2021-02-10 14:02:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 122.89999999999729
INFO  | 2021-02-10 14:02:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 64 updated in colony 6 with a fitness of 122.39999999999732
INFO  | 2021-02-10 14:02:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 75 updated in colony 7 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:02:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 5
INFO  | 2021-02-10 14:03:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:03:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 55 updated in colony 5 with a fitness of 71.60000000000021
INFO  | 2021-02-10 14:03:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 71.60000000000021
INFO  | 2021-02-10 14:03:00 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 76 updated in colony 7 with a fitness of 170.3999999999946
INFO  | 2021-02-10 14:03:00 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 6
INFO  | 2021-02-10 14:03:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 49 updated in colony 4 with a fitness of 170.3999999999946
INFO  | 2021-02-10 14:03:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 74.10000000000007
INFO  | 2021-02-10 14:03:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 68 updated in colony 6 with a fitness of 73.6000000000001
INFO  | 2021-02-10 14:03:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.60000000000026
INFO  | 2021-02-10 14:03:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 7
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:03:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:04:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:05:07 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:05:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:07:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 4 takes the solution of 5 because it is significantly worse
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 4 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:07:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:07:33 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 71.7000000000002
INFO  | 2021-02-10 14:07:33 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 55 updated in colony 5 with a fitness of 272.89999999999355
INFO  | 2021-02-10 14:07:33 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 66 updated in colony 6 with a fitness of 477.30000000004003
INFO  | 2021-02-10 14:07:33 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 77 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:33 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:07:37 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 48 updated in colony 4 with a fitness of 71.20000000000023
INFO  | 2021-02-10 14:07:37 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 55 updated in colony 5 with a fitness of 170.3999999999946
INFO  | 2021-02-10 14:07:37 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 68 updated in colony 6 with a fitness of 221.6999999999917
INFO  | 2021-02-10 14:07:37 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:37 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 4
INFO  | 2021-02-10 14:07:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 5
INFO  | 2021-02-10 14:07:44 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 49 updated in colony 4 with a fitness of 271.49999999999324
INFO  | 2021-02-10 14:07:44 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:44 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:44 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:44 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 6
INFO  | 2021-02-10 14:07:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 46 updated in colony 4 with a fitness of 72.70000000000014
INFO  | 2021-02-10 14:07:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 53 updated in colony 5 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:45 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 76 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:45 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 7
INFO  | 2021-02-10 14:07:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 45 updated in colony 4 with a fitness of 171.39999999999455
INFO  | 2021-02-10 14:07:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 56 updated in colony 5 with a fitness of 72.50000000000016
INFO  | 2021-02-10 14:07:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:48 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 73 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:48 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 8
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 59 updated in colony 5 with a fitness of 78.19999999999983
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 5
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 77.89999999999985
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 6
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 127.09999999999705
INFO  | 2021-02-10 14:07:50 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 9
INFO  | 2021-02-10 14:07:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 48 updated in colony 4 with a fitness of 70.40000000000028
INFO  | 2021-02-10 14:07:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 123.29999999999727
INFO  | 2021-02-10 14:07:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 70 updated in colony 7 with a fitness of 80.5999999999997
INFO  | 2021-02-10 14:07:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 10
INFO  | 2021-02-10 14:07:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 46 updated in colony 4 with a fitness of 77.49999999999987
INFO  | 2021-02-10 14:07:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 59 updated in colony 5 with a fitness of 73.5000000000001
INFO  | 2021-02-10 14:07:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 61 updated in colony 6 with a fitness of 73.30000000000011
INFO  | 2021-02-10 14:07:54 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 71 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:07:54 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 11
INFO  | 2021-02-10 14:07:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 41 updated in colony 4 with a fitness of 270.59999999999303
INFO  | 2021-02-10 14:07:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 4
INFO  | 2021-02-10 14:07:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 4 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:07:58 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 79.79999999999974
INFO  | 2021-02-10 14:07:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 66 updated in colony 6 with a fitness of 179.69999999999408
INFO  | 2021-02-10 14:07:59 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 80.29999999999971
INFO  | 2021-02-10 14:07:59 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 12
INFO  | 2021-02-10 14:08:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 41 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:08:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 53 updated in colony 5 with a fitness of 82.1999999999996
INFO  | 2021-02-10 14:08:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 62 updated in colony 6 with a fitness of 74.20000000000006
INFO  | 2021-02-10 14:08:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 71 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:08:01 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 13
INFO  | 2021-02-10 14:08:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:08:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 80.99999999999967
INFO  | 2021-02-10 14:08:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 66 updated in colony 6 with a fitness of 81.99999999999962
INFO  | 2021-02-10 14:08:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 79 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:08:03 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 14
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 47 updated in colony 4 with a fitness of 424.300000000028
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 51 updated in colony 5 with a fitness of 83.19999999999955
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 60 updated in colony 6 with a fitness of 72.90000000000013
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 74 updated in colony 7 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 7
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 7 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:08:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 15
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 40 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 59 updated in colony 5 with a fitness of 82.69999999999958
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 5
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 5 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 67 updated in colony 6 with a fitness of 73.4000000000001
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 78 updated in colony 7 with a fitness of 79.99999999999973
INFO  | 2021-02-10 14:08:12 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 16
INFO  | 2021-02-10 14:08:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 47 updated in colony 4 with a fitness of 123.49999999999726
INFO  | 2021-02-10 14:08:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 58 updated in colony 5 with a fitness of 71.50000000000021
INFO  | 2021-02-10 14:08:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 81.49999999999964
INFO  | 2021-02-10 14:08:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 79 updated in colony 7 with a fitness of 121.69999999999736
INFO  | 2021-02-10 14:08:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 17
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 42 updated in colony 4 with a fitness of 124.5999999999972
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 52 updated in colony 5 with a fitness of 331.00000000000676
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 81.19999999999966
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 6
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 6 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 76 updated in colony 7 with a fitness of 82.49999999999959
INFO  | 2021-02-10 14:08:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 18
INFO  | 2021-02-10 14:08:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 48 updated in colony 4 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:08:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 50 updated in colony 5 with a fitness of 233.09999999999104
INFO  | 2021-02-10 14:08:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 65 updated in colony 6 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:08:24 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 75 updated in colony 7 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:08:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 19
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:11:21 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:11:22 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:11:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:12:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:19:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:20:15 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:20:15 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 14:20:15 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:20:15 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:20:15 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 173.29999999999444
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 39 updated in colony 3 with a fitness of 126.1999999999971
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 2 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:20:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:24:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:29:13 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:29:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:29:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:29:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:29:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:29:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:30:40 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:32:24 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:33:01 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:33:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:33:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:35:19 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:35:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:35:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 18 updated in colony 1 with a fitness of 72.80000000000014
INFO  | 2021-02-10 14:35:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:35:35 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:35:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 123.69999999999725
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 75.89999999999996
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 35.600000000000236
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 0 takes the solution of 1 because it is significantly worse
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:35:39 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:35:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 78.09999999999984
INFO  | 2021-02-10 14:35:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:35:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 28 updated in colony 2 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:35:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 35.600000000000236
INFO  | 2021-02-10 14:35:43 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 4
INFO  | 2021-02-10 14:35:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:35:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 370.8000000000158
INFO  | 2021-02-10 14:35:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 73.4000000000001
INFO  | 2021-02-10 14:35:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 51.20000000000046
INFO  | 2021-02-10 14:35:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 5
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 122.29999999999733
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 572.4000000000616
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 3 takes the solution of 1 because it is significantly worse
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:36:02 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 6
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 4 updated in colony 0 with a fitness of 5000.100000000659
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 19 updated in colony 1 with a fitness of 370.8000000000158
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 34 updated in colony 3 with a fitness of 170.89999999999458
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 2 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=3, neuronID=0]
INFO  | 2021-02-10 14:37:26 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 7
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:37:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:38:35 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:40:56 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:41:27 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:43:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:44:30 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:44:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:39 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:40 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:44:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 16 updated in colony 1 with a fitness of 27.50000000000012
INFO  | 2021-02-10 14:44:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:41 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:44:41 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 5000.100000000659
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 27.50000000000012
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 9.299999999999995
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 3 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:46:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 4
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:47:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:49) - Created ACO-Handler with following configuration:
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_NUMBER_OF_COLONIES             = 4
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_INPUT_LAYER_SIZE                = 4
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_COLONY_SIZE                    = 10
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - NN_OUTPUT_LAYER_SIZE               = 1
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_ITERATIONS         = 5
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_DISSIPATION_FUNCTION = 0.9p
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_STANDARD_DEVIATION_FUNCTION    = (1 - 0.5p) / (10p + 1)
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PROGRESSION_THRESHOLD          = 0.2
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_INITIAL_PHEROMONE_VALUE        = 0.1
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_CONNECTION_SPLIT_PROBABILITY   = 0.2
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] stream.ForEachOps$ForEachOp$OfRef (ForEachOps.java:183) - ACO_PHEROMONE_UPDATE_FUNCTION      = tanh(3np)/tanh(3n)
INFO  | 2021-02-10 14:50:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 1
INFO  | 2021-02-10 14:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:20 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:20 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 2
INFO  | 2021-02-10 14:50:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 6 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 27.50000000000012
INFO  | 2021-02-10 14:50:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:32 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:32 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 3
INFO  | 2021-02-10 14:50:34 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:34 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 27.50000000000012
INFO  | 2021-02-10 14:50:34 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:34 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 39 updated in colony 3 with a fitness of 77.59999999999987
INFO  | 2021-02-10 14:50:34 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 4
INFO  | 2021-02-10 14:50:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 12 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 14:50:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:36 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 32 updated in colony 3 with a fitness of 79.39999999999976
INFO  | 2021-02-10 14:50:36 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 5
INFO  | 2021-02-10 14:50:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 8 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 14:50:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:38 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 79.09999999999978
INFO  | 2021-02-10 14:50:38 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 6
INFO  | 2021-02-10 14:50:40 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:40 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 14:50:40 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:40 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 32 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:40 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 7
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 21.400000000000034
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 11.650000000000029
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 2 takes the solution of 0 because it is significantly worse
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:50:43 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 8
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 6 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 27.50000000000012
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 1
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 126.49999999999709
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 71.20000000000023
INFO  | 2021-02-10 14:50:47 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 9
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 4 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 18 updated in colony 1 with a fitness of 8.699999999999985
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 21 updated in colony 2 with a fitness of 170.3999999999946
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 1 takes the solution of 2 because it is significantly worse
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:50:52 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 10
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 1 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 11.650000000000029
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 34 updated in colony 3 with a fitness of 71.50000000000021
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 3
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:50:53 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 11
INFO  | 2021-02-10 14:50:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 6 updated in colony 0 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:50:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 14 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 27 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:55 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 70.50000000000027
INFO  | 2021-02-10 14:50:55 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 12
INFO  | 2021-02-10 14:50:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 7 updated in colony 0 with a fitness of 74.40000000000005
INFO  | 2021-02-10 14:50:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 27 updated in colony 2 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:50:57 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 30 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:50:57 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 13
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 9 updated in colony 0 with a fitness of 106.3499999999961
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 0
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=1] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 32 updated in colony 3 with a fitness of 24.450000000000212
INFO  | 2021-02-10 14:51:01 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 14
INFO  | 2021-02-10 14:51:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 77.39999999999988
INFO  | 2021-02-10 14:51:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 11 updated in colony 1 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 71.90000000000019
INFO  | 2021-02-10 14:51:03 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 74.00000000000007
INFO  | 2021-02-10 14:51:03 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 15
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 1 updated in colony 0 with a fitness of 74.40000000000005
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 82.69999999999958
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 22 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 2
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 2 by inserting connection from NeuronID[layerID=1, neuronID=0] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 36 updated in colony 3 with a fitness of 21.600000000000172
INFO  | 2021-02-10 14:51:04 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 16
INFO  | 2021-02-10 14:51:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 1 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 13 updated in colony 1 with a fitness of 9.249999999999995
INFO  | 2021-02-10 14:51:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 24 updated in colony 2 with a fitness of 20.550000000000157
INFO  | 2021-02-10 14:51:05 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:05 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 17
INFO  | 2021-02-10 14:51:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 4 updated in colony 0 with a fitness of 76.9999999999999
INFO  | 2021-02-10 14:51:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 18.250000000000124
INFO  | 2021-02-10 14:51:07 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:07 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 18
INFO  | 2021-02-10 14:51:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 2 updated in colony 0 with a fitness of 78.6999999999998
INFO  | 2021-02-10 14:51:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 33.35000000000025
INFO  | 2021-02-10 14:51:08 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 35 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:08 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 19
INFO  | 2021-02-10 14:51:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 5 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 29 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:10 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:10 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 20
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 20 updated in colony 2 with a fitness of 121.29999999999738
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 33 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 3
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 3 by inserting connection from NeuronID[layerID=1, neuronID=1] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 0 takes the solution of 2 because it is significantly worse
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=1, neuronID=0] to NeuronID[layerID=2, neuronID=0]
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=1, neuronID=1] to NeuronID[layerID=4, neuronID=0]
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=3, neuronID=0] to NeuronID[layerID=4, neuronID=0]
INFO  | 2021-02-10 14:51:12 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 21
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 1 updated in colony 0 with a fitness of 29.100000000000144
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 10 updated in colony 1 with a fitness of 7.89999999999998
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 1
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=3, neuronID=0]
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 26 updated in colony 2 with a fitness of 81.69999999999963
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 31 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:96) - ACO-Colony 1 takes the solution of 2 because it is significantly worse
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=0, neuronID=2] to NeuronID[layerID=4, neuronID=0]
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 1 by inserting connection from NeuronID[layerID=3, neuronID=0] to NeuronID[layerID=4, neuronID=0]
INFO  | 2021-02-10 14:51:14 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 22
INFO  | 2021-02-10 14:51:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 3 updated in colony 0 with a fitness of 39.20000000000029
INFO  | 2021-02-10 14:51:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 18 updated in colony 1 with a fitness of 49.20000000000043
INFO  | 2021-02-10 14:51:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 25 updated in colony 2 with a fitness of 120.29999999999744
INFO  | 2021-02-10 14:51:16 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 32 updated in colony 3 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:16 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 23
INFO  | 2021-02-10 14:51:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 29.100000000000144
INFO  | 2021-02-10 14:51:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 17 updated in colony 1 with a fitness of 29.200000000000145
INFO  | 2021-02-10 14:51:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 23 updated in colony 2 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:18 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 38 updated in colony 3 with a fitness of 123.49999999999726
INFO  | 2021-02-10 14:51:18 | [JavaFX Application Thread] aco.AcoHandler (AcoHandler.java:69) - Generating solutions for iteration 24
INFO  | 2021-02-10 14:51:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:82) - Ant 0 updated in colony 0 with a fitness of 70.20000000000029
INFO  | 2021-02-10 14:51:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:101) - Detected stagnation of fitness in ACO-Colony 0
INFO  | 2021-02-10 14:51:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=0] to NeuronID[layerID=1, neuronID=0]
INFO  | 2021-02-10 14:51:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=0, neuronID=3] to NeuronID[layerID=2, neuronID=2]
INFO  | 2021-02-10 14:51:21 | [JavaFX Application Thread] colony.AcoColony (AcoColony.java:138) - Modifying neural network and pheromone matrix of ACO-Colony 0 by inserting connection from NeuronID[layerID=2, neuronID=0] to NeuronID[layerID=2, neuronID=0]
